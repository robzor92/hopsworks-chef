#!/bin/bash

# This script allows Hopsworks to start/kill/ping (check if alive) a TensorBoard
# There will be 1 TensorBoard process per ProjectUser at max.
# This script can be run by hopsworks (running as user 'glassfish') as a sudo command
#

help() {
    echo ""
    echo "usage: $0 [start hdfsUser hdfsLogdir tensorBoardDir port anacondaEnvironmentPath hadoopVersion] | [kill pid] | [ping pid]"
    echo ""
    exit 1
}

ANACONDA_USER=<%= node['conda']['user'] %>
HOPSWORKS_USER=<%= node['hopsworks']['user'] %>
DOMAINS_DIR=<%= node['glassfish']['domains_dir'] %>
HADOOP_HOME=<%= node['hops']['base_dir'] %>

if [ "$1" == "kill" ] ; then

    if [ $# -ne 2 ]; then
	help
    fi
    
    # Sanity checks for injection attacks
    re='^[0-9]+$'
    if ! [[ $2 =~ $re ]] ; then
      echo "error: Not a number" >&2
      help
    fi

    PID=`ps aux | grep tensorboard | grep $2`
    if [ "$PID" != "" ] ; then
 	    kill -9 $2 > /dev/null 2>&1
    fi

    exit $?

elif [ "$1" == "start" ] ; then

    if [ $# -ne 7 ]; then
	help
    fi

    ls $6/bin/tensorboard
    if [ $? -ne 0 ] ; then
        echo "Could not find tensorboard binary"
        exit 1
    fi

    if [ ! -d $4 ] ; then
        echo "TensorBoard dir does not exist: $4"
        exit 2
    fi

    sudo chown $ANACONDA_USER:$HOPSWORKS_USER $4
    sudo chmod 770 $4
    cd $4

    echo > $5.pid
    sudo chown $ANACONDA_USER:$HOPSWORKS_USER $5.pid

    echo > $5.log
    sudo chown $ANACONDA_USER:$HOPSWORKS_USER $5.log

    su ${ANACONDA_USER} -c "${DOMAINS_DIR}/domain1/bin/tensorboard-launch.sh $2 $3 $4 $5 $6 $HADOOP_HOME $7"

elif [ "$1" == "ping" ] ; then

    if [ $# -ne 2 ]; then
    	help
    fi
    sudo ps -ef | grep -v 'tensorboard.sh' | grep -i tensorboard | grep $2
else
  help
fi

exit $?
